<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="UI.Settings.Dealer.DownTimeInHours.Description" xml:space="preserve">
    <value>How many days it will take for the dealer to return after he has fled or been killed.</value>
  </data>
  <data name="UI.Settings.Dealer.DownTimeInHours.Title" xml:space="preserve">
    <value>Down time in hours</value>
  </data>
  <data name="UI.Settings.Dealer.HasArmor.Description" xml:space="preserve">
    <value>Should the dealer wear armor?</value>
  </data>
  <data name="UI.Settings.Dealer.HasArmor.Title" xml:space="preserve">
    <value>Is wearing armor?</value>
  </data>
  <data name="UI.Settings.Dealer.HasWeapons.Description" xml:space="preserve">
    <value>Should the dealer carry one or more weapons?</value>
  </data>
  <data name="UI.Settings.Dealer.HasWeapons.Title" xml:space="preserve">
    <value>Is the dealer armed?</value>
  </data>
  <data name="UI.Settings.Market.InventoryChangeInterval.Description" xml:space="preserve">
    <value>After how many hours does the dealer's drug offer change?</value>
  </data>
  <data name="UI.Settings.Market.InventoryChangeInterval.Title" xml:space="preserve">
    <value>Inventory change interval</value>
  </data>
  <data name="UI.Settings.Market.MaximumDrugPrice.Description" xml:space="preserve">
    <value>The maximum value of a drug, serves as a multiplier to the nominal market value.</value>
  </data>
  <data name="UI.Settings.Market.MaximumDrugPrice.Title" xml:space="preserve">
    <value>Maximum drug value</value>
  </data>
  <data name="UI.Settings.Market.MinimumDrugPrice.Description" xml:space="preserve">
    <value>The minimum value of a drug, serves as a multiplier to the nominal market value.</value>
  </data>
  <data name="UI.Settings.Market.MinimumDrugPrice.Title" xml:space="preserve">
    <value>Minimum drug value</value>
  </data>
  <data name="UI.Settings.Market.PriceChangeInterval.Description" xml:space="preserve">
    <value>After how many hours does the current drug price change?</value>
  </data>
  <data name="UI.Settings.Market.PriceChangeInterval.Title" xml:space="preserve">
    <value>Price change interval</value>
  </data>
  <data name="UI.Settings.Player.ExperienceMultiplier.Description" xml:space="preserve">
    <value>The experience value multiplier, which is to be applied at each experience gain.</value>
  </data>
  <data name="UI.Settings.Player.ExperienceMultiplier.Title" xml:space="preserve">
    <value>Experience multiplier</value>
  </data>
  <data name="UI.Settings.Player.InventoryExpansionPerLevel.Description" xml:space="preserve">
    <value>The number with which the inventory increases with each level up.</value>
  </data>
  <data name="UI.Settings.Player.InventoryExpansionPerLevel.Title" xml:space="preserve">
    <value>Inventory expansion per level</value>
  </data>
  <data name="UI.Settings.Player.LooseDrugsOnDeath.Description" xml:space="preserve">
    <value>Does the player looses the drugs he is currently carrying when he gets wasted?</value>
  </data>
  <data name="UI.Settings.Player.LooseDrugsOnDeath.Title" xml:space="preserve">
    <value>Loose drugs on death?</value>
  </data>
  <data name="UI.Settings.Player.LooseDrugsWhenBusted.Description" xml:space="preserve">
    <value>Does the player looses the drugs he is currently carrying when he gets busted?</value>
  </data>
  <data name="UI.Settings.Player.LooseDrugsWhenBusted.Title" xml:space="preserve">
    <value>Loose drugs when busted?</value>
  </data>
  <data name="UI.Settings.Player.LooseMoneyOnDeath.Description" xml:space="preserve">
    <value>Does the player looses the drug money he is currently carrying when he gets wasted?</value>
  </data>
  <data name="UI.Settings.Player.LooseMoneyOnDeath.Title" xml:space="preserve">
    <value>Loose drug money on death?</value>
  </data>
  <data name="UI.Settings.Player.LooseMoneyWhenBusted.Description" xml:space="preserve">
    <value>Does the player looses the drug money he is currently carrying when he gets busted?</value>
  </data>
  <data name="UI.Settings.Player.LooseMoneyWhenBusted.Title" xml:space="preserve">
    <value>Loose drug money when busted?</value>
  </data>
  <data name="UI.Settings.Player.StartingInventory.Description" xml:space="preserve">
    <value>The size of the starting inventory or the base value of the inventory.</value>
  </data>
  <data name="UI.Settings.Player.StartingInventory.Title" xml:space="preserve">
    <value>Starting inventory</value>
  </data>
  <data name="UI.Settings.Trafficking.BustChance.Description" xml:space="preserve">
    <value>How likely is a DEA raid after the deal is done?</value>
  </data>
  <data name="UI.Settings.Trafficking.BustChance.Title" xml:space="preserve">
    <value>Bust chance</value>
  </data>
  <data name="UI.Settings.Trafficking.DiscoverDealer.Description" xml:space="preserve">
    <value>Do the dealers have to be found first or do they appear immediately on the map?</value>
  </data>
  <data name="UI.Settings.Trafficking.DiscoverDealer.Title" xml:space="preserve">
    <value>Need to discover dealer?</value>
  </data>
  <data name="UI.Settings.Trafficking.WantedLevel.Description" xml:space="preserve">
    <value>What is the mugshot level for a DEA raid?</value>
  </data>
  <data name="UI.Settings.Trafficking.WantedLevel.Title" xml:space="preserve">
    <value>Wanted level</value>
  </data>
  <data name="UI.SettingsMenu.Name" xml:space="preserve">
    <value>Settings will saved on close.</value>
  </data>
  <data name="UI.SettingsMenu.Title" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="UI.SideMenu.Name.Buy" xml:space="preserve">
    <value>Your Money: {0}</value>
  </data>
  <data name="UI.SideMenu.Name.Sell" xml:space="preserve">
    <value>Dealer Money: {0}</value>
  </data>
  <data name="UI.SideMenu.Title.Buy" xml:space="preserve">
    <value>Buy</value>
  </data>
  <data name="UI.SideMenu.Title.Give" xml:space="preserve">
    <value>Give</value>
  </data>
  <data name="UI.SideMenu.Title.Sell" xml:space="preserve">
    <value>Sell</value>
  </data>
  <data name="UI.SideMenu.Title.Take" xml:space="preserve">
    <value>Take</value>
  </data>
  <data name="UI.Switch.Item.Description.Buy" xml:space="preserve">
    <value>Want to sell instead of buying?</value>
  </data>
  <data name="UI.Switch.Item.Description.Give" xml:space="preserve">
    <value>Want to take something back?</value>
  </data>
  <data name="UI.Switch.Item.Description.Sell" xml:space="preserve">
    <value>Want to buy instead of selling?</value>
  </data>
  <data name="UI.Switch.Item.Description.Take" xml:space="preserve">
    <value>Want to give something back?</value>
  </data>
  <data name="UI.Switch.Item.Title.Buy" xml:space="preserve">
    <value>Sell</value>
  </data>
  <data name="UI.Switch.Item.Title.Give" xml:space="preserve">
    <value>Take</value>
  </data>
  <data name="UI.Switch.Item.Title.Sell" xml:space="preserve">
    <value>Buy</value>
  </data>
  <data name="UI.Switch.Item.Title.Take" xml:space="preserve">
    <value>Give</value>
  </data>
</root>